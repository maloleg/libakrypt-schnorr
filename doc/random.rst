Генерация псевдослучайных последовательностей
=============================================

Выработка псевдослучайных значений востребована при реализации
большого класса криптографических преобразований, в частности,
при генерации ключей и синхропосылок, выработке электронной подписи,
реализации алгоритмических мер защиты ключевой информации и т.п.

Библиотека ``libakrypt`` предоставляет класс генераторов,
которые призваны заменить преобразования, реализованные в стандартных функциях языка Си или C++.
Для генерации псевдослучайных последовательностей необходимо создать
контекст генератора (``struct random``) с использованием одной из перечисленных ниже функций:

 - :func:`int ak_random_create_lcg` - линейный конгруэнтный генератор;
 - :func:`int ak_random_create_nlfsr` - регистр сдвига с нелинейной обратной связью;
 - :func:`int ak_random_create_hash` - генератор, основанный на применении функции хеширования;
 - :func:`int ak_random_create_file` - генератор, считывающий данные из заданного файла;
 - :func:`int ak_random_create_winrtl` - стандартный генератор для ОС Windows;
 - :func:`int ak_random_create_random` - стандартный генератор ОС Linux, реализованный как символьное устройство ``\dev\random``.

При создании генератора происходит инициализация его внутреннего состояния
некоторым значением, зависящим от текущего состояния системы, на которой выполняется библиотека.
Пользователь также может установить текущее
значение внутреннего состояния генератора с помощью функции:

 - :func:`int ak_random_randomize`.


Для выработки псевдослучайной последовательности заданной длины должна
использоваться функция

 - :func:`int ak_random_ptr`

Для удаления контекста генератора псевдослучайной последовательности
должна использоваться функция

 - :func:`int ak_random_destroy`.

Можно ли вырабатывать действительные значения?
----------------------------------------------

Для иллюстрации, ниже приводится простая программа,
использующая генератор псевдослучайных чисел для вычисления константы :math:`\pi` при
помощи метода Монте Карло (файл ``example-g04n01.c``).

.. literalinclude:: ../examples/faq/example-g04n01.c
 :language: c
 :linenos:


Есть ли какие-либо дополнительные функции для работы с генераторами?
--------------------------------------------------------------------

Стоит также отметить две
служебные функции, связанные с использованием генераторов псевдослучайных последовательностей:

 - :func:`int ak_ptr_wipe` - функция заполняет заданную область памяти псевдослучайными значениями,
 - :func:`int ak_file_delete` - функция заполняет заданный файл псевдослучайными значениями, а потом, удаляет файл.

Указанные функции используются, как правило, для удаления чувствительной информации
из памяти программы, а также с физических носителей информации.
